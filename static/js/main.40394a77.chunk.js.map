{"version":3,"sources":["MovieContext.js","AddMovie.js","Movie.js","MovieList.js","Nav.js","App.js","index.js"],"names":["MovieContext","createContext","MovieProvider","props","useState","name","price","id","movies","setMovies","Provider","value","children","AddMovie","setName","setPrice","useContext","className","onSubmit","e","preventDefault","prevMovies","Date","getTime","toString","type","placeholder","onChange","target","Movie","MovieList","map","movie","console","log","key","Nav","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAGaA,EAAeC,0BAGfC,EAAgB,SAACC,GAAW,IAAD,EACTC,mBAAS,CAClC,CACGC,KAAM,eACNC,MAAO,MACPC,GAAI,OAEP,CACGF,KAAM,YACNC,MAAO,MACPC,GAAI,OAEP,CACGF,KAAM,mBACNC,MAAO,MACPC,GAAI,SAf2B,mBAC9BC,EAD8B,KACtBC,EADsB,KAkBrC,OACG,kBAACT,EAAaU,SAAd,CAAuBC,MAAO,CAACH,EAAQC,IACnCN,EAAMS,WCsBDC,MA7Cf,WAAqB,IAAD,EACOT,mBAAS,IADhB,mBACVC,EADU,KACJS,EADI,OAESV,mBAAS,IAFlB,mBAEVE,EAFU,KAEHS,EAFG,OAIWC,qBAAWhB,GAJtB,mBAIFS,GAJE,WAwBjB,OACG,0BAAMQ,UAAU,YAAYC,SAXd,SAACC,GACfA,EAAEC,iBACFX,GAAU,SAACY,GAAD,4BACJA,GADI,CAEP,CAAEhB,KAAMA,EAAMC,MAAOA,EAAOC,IAAI,IAAIe,MAAOC,UAAUC,iBAExDV,EAAQ,IACRC,EAAS,MAKN,2BACGU,KAAK,OACLpB,KAAK,OACLqB,YAAY,OACZf,MAAON,EACPsB,SAzBU,SAACR,GACjBL,EAAQK,EAAES,OAAOjB,UA0Bd,2BACGc,KAAK,OACLpB,KAAK,QACLqB,YAAY,QACZf,MAAOL,EACPqB,SA5BW,SAACR,GAClBJ,EAASI,EAAES,OAAOjB,UA6Bf,4BAAQM,UAAU,OAAlB,YChCMY,MATf,YAAoC,EAAnBtB,GAAoB,IAAhBF,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACxB,OACG,6BACG,4BAAKD,GACL,4BAAKC,KCcCwB,MAhBf,WAAqB,MAEUd,qBAAWhB,GAFrB,mBAEXQ,EAFW,KAIlB,OAJkB,KAKf,yBAAKS,UAAU,aACXT,EAAOuB,KAAI,SAACC,GAEV,OADAC,QAAQC,IAAIF,GAET,kBAAC,EAAD,CAAOG,IAAKH,EAAMzB,GAAIF,KAAM2B,EAAM3B,KAAMC,MAAO0B,EAAM1B,aCErD8B,MAZf,WAAe,MAEgBpB,qBAAWhB,GAF3B,mBAELQ,EAFK,KAIZ,OAJY,KAKT,yBAAKS,UAAU,OACZ,oCACA,+CAAqBT,EAAO6B,UCQtBC,MAZf,WACG,OACG,kBAAC,EAAD,KACG,yBAAKrB,UAAU,OACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPZsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.40394a77.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\n//initiate/create a context\r\nexport const MovieContext = createContext();\r\n\r\n//creating a component - This will wrap around the App component and make all components within the App component to have access to the data & functions here.\r\nexport const MovieProvider = (props) => {\r\n   const [movies, setMovies] = useState([\r\n      {\r\n         name: 'Harry Potter',\r\n         price: '$10',\r\n         id: 23124,\r\n      },\r\n      {\r\n         name: 'Inception',\r\n         price: '$15',\r\n         id: 23125,\r\n      },\r\n      {\r\n         name: 'Immortal Beloved',\r\n         price: '$20',\r\n         id: 23126,\r\n      },\r\n   ]);\r\n   return (\r\n      <MovieContext.Provider value={[movies, setMovies]}>\r\n         {props.children}\r\n      </MovieContext.Provider>\r\n   );\r\n};\r\n\r\n//props.children will render all the child components - Nav and MovieList\r\n","import React, { useState, useContext } from 'react';\r\nimport { MovieContext } from './MovieContext';\r\n\r\nfunction AddMovie() {\r\n   const [name, setName] = useState('');\r\n   const [price, setPrice] = useState('');\r\n\r\n   const [movies, setMovies] = useContext(MovieContext);\r\n\r\n   const updateName = (e) => {\r\n      setName(e.target.value);\r\n   };\r\n\r\n   const updatePrice = (e) => {\r\n      setPrice(e.target.value);\r\n   };\r\n\r\n   const addMovie = (e) => {\r\n      e.preventDefault();\r\n      setMovies((prevMovies) => [\r\n         ...prevMovies,\r\n         { name: name, price: price, id: new Date().getTime().toString() },\r\n      ]);\r\n      setName('');\r\n      setPrice('');\r\n   };\r\n\r\n   return (\r\n      <form className='movieForm' onSubmit={addMovie}>\r\n         <input\r\n            type='text'\r\n            name='name'\r\n            placeholder='Name'\r\n            value={name}\r\n            onChange={updateName}\r\n         />\r\n         <input\r\n            type='text'\r\n            name='price'\r\n            placeholder='Price'\r\n            value={price}\r\n            onChange={updatePrice}\r\n         />\r\n         <button className='btn'>submit</button>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default AddMovie;\r\n","import React from 'react';\r\n\r\nfunction Movie({ id, name, price }) {\r\n   return (\r\n      <div>\r\n         <h3>{name}</h3>\r\n         <h4>{price}</h4>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useContext } from 'react';\r\nimport Movie from './Movie';\r\nimport { MovieContext } from './MovieContext';\r\n\r\nfunction MovieList() {\r\n   //accessing the value in the provider through the context\r\n   const [movies, setMovies] = useContext(MovieContext);\r\n\r\n   return (\r\n      <div className='movieList'>\r\n         {movies.map((movie) => {\r\n            console.log(movie);\r\n            return (\r\n               <Movie key={movie.id} name={movie.name} price={movie.price} />\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from 'react';\r\nimport { MovieContext } from './MovieContext';\r\n\r\nfunction Nav() {\r\n   //accessing the value in the provider through the context\r\n   const [movies, setMovies] = useContext(MovieContext);\r\n\r\n   return (\r\n      <div className='nav'>\r\n         <h3>Logo</h3>\r\n         <h4>List of Movies: {movies.length}</h4>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport AddMovie from './AddMovie';\nimport { MovieProvider } from './MovieContext';\nimport MovieList from './MovieList';\nimport Nav from './Nav';\n\nfunction App() {\n   return (\n      <MovieProvider>\n         <div className='App'>\n            <Nav />\n            <AddMovie />\n            <MovieList />\n         </div>\n      </MovieProvider>\n   );\n}\n\nexport default App;\n\n/*\nThe Nav and MovieList components are 2 independent components and we cannot pass data from one to another. \n\nQuestion:\nSince both components are independent, how can the Nav component have access to the number of movies in the MovieList component?\n\nAns:\nReact context comes in handy here....\n\n\n\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}